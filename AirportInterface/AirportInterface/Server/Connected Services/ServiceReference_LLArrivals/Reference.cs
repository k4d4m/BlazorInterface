//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference_LLArrivals
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference_LLArrivals.FlightInformationSoap")]
    public interface FlightInformationSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FlightArrivals", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference_LLArrivals.FlightInfo[]> FlightArrivalsAsync(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FlightArrivalsAndDepartures", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference_LLArrivals.FlightInfo[]> FlightArrivalsAndDeparturesAsync(string searchTerm, bool exactflight);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GeneratePlasmaScreenArrivalsTable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GeneratePlasmaScreenArrivalsTableAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GeneratePlasmaScreenArrivalsTableWithinTime", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GeneratePlasmaScreenArrivalsTableWithinTimeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GeneratePlasmaScreenDeparturesTable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GeneratePlasmaScreenDeparturesTableAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GenerateBusPlasmaScreenDeparturesTable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GenerateBusPlasmaScreenDeparturesTableAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GenerateBusPlasmaScreenArrivalsTable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GenerateBusPlasmaScreenArrivalsTableAsync();
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FlightInfo
    {
        
        private string fltnmbrField;
        
        private string origdestField;
        
        private string airportCodeField;
        
        private string schedtimeField;
        
        private string estTimeField;
        
        private string actualTimeField;
        
        private string statusField;
        
        private string bagConveyorNumberField;
        
        private string checkinDeskField;
        
        private string messageField;
        
        private System.DateTime dateCreatedField;
        
        private System.DateTime dateofFlightField;
        
        private bool isArrivalField;
        
        private string imgPathField;
        
        private string statusCssClassField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string fltnmbr
        {
            get
            {
                return this.fltnmbrField;
            }
            set
            {
                this.fltnmbrField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string origdest
        {
            get
            {
                return this.origdestField;
            }
            set
            {
                this.origdestField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string airportCode
        {
            get
            {
                return this.airportCodeField;
            }
            set
            {
                this.airportCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string schedtime
        {
            get
            {
                return this.schedtimeField;
            }
            set
            {
                this.schedtimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string estTime
        {
            get
            {
                return this.estTimeField;
            }
            set
            {
                this.estTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string actualTime
        {
            get
            {
                return this.actualTimeField;
            }
            set
            {
                this.actualTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string status
        {
            get
            {
                return this.statusField;
            }
            set
            {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string bagConveyorNumber
        {
            get
            {
                return this.bagConveyorNumberField;
            }
            set
            {
                this.bagConveyorNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string checkinDesk
        {
            get
            {
                return this.checkinDeskField;
            }
            set
            {
                this.checkinDeskField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string message
        {
            get
            {
                return this.messageField;
            }
            set
            {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public System.DateTime dateCreated
        {
            get
            {
                return this.dateCreatedField;
            }
            set
            {
                this.dateCreatedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public System.DateTime DateofFlight
        {
            get
            {
                return this.dateofFlightField;
            }
            set
            {
                this.dateofFlightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public bool isArrival
        {
            get
            {
                return this.isArrivalField;
            }
            set
            {
                this.isArrivalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string imgPath
        {
            get
            {
                return this.imgPathField;
            }
            set
            {
                this.imgPathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string statusCssClass
        {
            get
            {
                return this.statusCssClassField;
            }
            set
            {
                this.statusCssClassField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface FlightInformationSoapChannel : ServiceReference_LLArrivals.FlightInformationSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class FlightInformationSoapClient : System.ServiceModel.ClientBase<ServiceReference_LLArrivals.FlightInformationSoap>, ServiceReference_LLArrivals.FlightInformationSoap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public FlightInformationSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(FlightInformationSoapClient.GetBindingForEndpoint(endpointConfiguration), FlightInformationSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public FlightInformationSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(FlightInformationSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public FlightInformationSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(FlightInformationSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public FlightInformationSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<ServiceReference_LLArrivals.FlightInfo[]> FlightArrivalsAsync(string searchTerm)
        {
            return base.Channel.FlightArrivalsAsync(searchTerm);
        }
        
        public System.Threading.Tasks.Task<ServiceReference_LLArrivals.FlightInfo[]> FlightArrivalsAndDeparturesAsync(string searchTerm, bool exactflight)
        {
            return base.Channel.FlightArrivalsAndDeparturesAsync(searchTerm, exactflight);
        }
        
        public System.Threading.Tasks.Task<string> GeneratePlasmaScreenArrivalsTableAsync()
        {
            return base.Channel.GeneratePlasmaScreenArrivalsTableAsync();
        }
        
        public System.Threading.Tasks.Task<string> GeneratePlasmaScreenArrivalsTableWithinTimeAsync()
        {
            return base.Channel.GeneratePlasmaScreenArrivalsTableWithinTimeAsync();
        }
        
        public System.Threading.Tasks.Task<string> GeneratePlasmaScreenDeparturesTableAsync()
        {
            return base.Channel.GeneratePlasmaScreenDeparturesTableAsync();
        }
        
        public System.Threading.Tasks.Task<string> GenerateBusPlasmaScreenDeparturesTableAsync()
        {
            return base.Channel.GenerateBusPlasmaScreenDeparturesTableAsync();
        }
        
        public System.Threading.Tasks.Task<string> GenerateBusPlasmaScreenArrivalsTableAsync()
        {
            return base.Channel.GenerateBusPlasmaScreenArrivalsTableAsync();
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.FlightInformationSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.FlightInformationSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpsTransportBindingElement httpsBindingElement = new System.ServiceModel.Channels.HttpsTransportBindingElement();
                httpsBindingElement.AllowCookies = true;
                httpsBindingElement.MaxBufferSize = int.MaxValue;
                httpsBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpsBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.FlightInformationSoap))
            {
                return new System.ServiceModel.EndpointAddress("https://www.london-luton.co.uk/WebServices/FlightInformation.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.FlightInformationSoap12))
            {
                return new System.ServiceModel.EndpointAddress("https://www.london-luton.co.uk/WebServices/FlightInformation.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            FlightInformationSoap,
            
            FlightInformationSoap12,
        }
    }
}
